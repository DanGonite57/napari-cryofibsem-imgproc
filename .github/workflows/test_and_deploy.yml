# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Tests ðŸ§ª

on:
  push:
    branches:
      - main
      - npe2
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
      - npe2
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install xvfb on Linux
      - name: Install xvfb on Linux
        if: matrix.platform == 'ubuntu-latest'
        run: sudo apt-get install -y xvfb

      # Install Qt libraries for macOS and Linux
      - uses: tlambert03/setup-qt-libs@v1
        if: matrix.platform != 'windows-latest'

      # Install OpenGL on Windows
      - name: Install Windows OpenGL
        if: matrix.platform == 'windows-latest'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools tox tox-gh-actions

      # Test using tox
      - name: Test with tox
        uses: aganders3/headless-gui@v2
        with:
          run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}

      # Upload coverage report
      - name: Coverage
        uses: codecov/codecov-action@v3

deploy:
  needs: [test]
  runs-on: ubuntu-latest
  if: |
    contains(github.ref, 'tags') ||
    github.ref == 'refs/heads/main'
  steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools setuptools_scm wheel twine build

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
      run: |
        git tag
        python -m build .
        twine upload dist/*
